{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,sBAAMC,SAfU,SAAEC,GAGlBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAI,4BAAQA,GAAR,CAAcP,OACjCC,EAAc,MAOlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAvBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEKI,MAAOF,GAFZ,cAEbG,EAFa,gBAGIA,EAAUC,OAHd,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCDPO,EAAc,SAAC,GAAwB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACtC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAOf,EAAMgB,IAAON,IACzB,kCAAMA,EAAN,WCFCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WAEPxB,EAASC,GACHwB,MAAM,SAAAC,GACJH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIrB,CAACpB,IAEEqB,EDhB0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,mCAAOpB,EAAP,OACEoB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADGA,EAAIC,aEZ3BgB,EAAe,WAExB,MAAqCzC,mBAAS,CAAC,cAA/C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAES2C,EAAWnB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEIA,SAAaA,GADLA,YCZpC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b35491c9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit =( e ) => {\r\n        //Previene el comportamiento del formulario\r\n        //Evita que se haga refresh de toda la página\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2){\r\n            //no tengo el acceso al arreglo de categorias\r\n            setCategories( cats => [...cats, inputValue]);\r\n            setInputValue('');\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input\r\n                type = \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired \r\n}","\r\n\r\n//TRAIGO LAS IMAGENES CON UNA PETICIÓN HTTP\r\nexport const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=modsq3T4O2xZzpYkSstOhuy9RqMx9h46`;\r\n    const respuesta = await fetch( url );\r\n    const { data } = await respuesta.json();\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\" >\r\n            <img src= { url } alt= { title }/>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n            { loading && <p>loading</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                            key = { img.id }    \r\n                            { ...img } \r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        //RETORNA UNA PROMESA ENTONCES PONGO UN THEN\r\n        getGifs( category )\r\n             .then( imgs =>{\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n             }) \r\n                \r\n     }, [category])\r\n\r\n    return state; //{ data:[], loading:true};\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] =  useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>   \r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />   \r\n            <ol>\r\n                {\r\n                     categories.map( category => (\r\n                        <GifGrid \r\n                            key = { category }\r\n                            category = { category }\r\n                        />\r\n                    ))\r\n                }\r\n               \r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}